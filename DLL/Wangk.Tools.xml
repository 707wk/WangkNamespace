<?xml version="1.0"?>
<doc>
<assembly>
<name>
Wangk.Tools
</name>
</assembly>
<members>
<member name="T:Wangk.Tools.My.Resources.Resources">
<summary>
  一个强类型的资源类，用于查找本地化的字符串等。
</summary>
</member>
<member name="P:Wangk.Tools.My.Resources.Resources.ResourceManager">
<summary>
  返回此类使用的缓存的 ResourceManager 实例。
</summary>
</member>
<member name="P:Wangk.Tools.My.Resources.Resources.Culture">
<summary>
  重写当前线程的 CurrentUICulture 属性
  重写当前线程的 CurrentUICulture 属性。
</summary>
</member>
<member name="T:Wangk.Tools.ConsoleDebug">
 <summary>
 终端调试
 </summary>
</member>
<member name="M:Wangk.Tools.ConsoleDebug.FreeConsole">
 <summary>
 释放控制台窗口
 </summary>
</member>
<member name="M:Wangk.Tools.ConsoleDebug.Open">
 <summary>
 打开终端
 </summary>
</member>
<member name="M:Wangk.Tools.ConsoleDebug.Close">
 <summary>
 关闭终端
 </summary>
</member>
<member name="T:Wangk.Tools.Logger">
 <summary>
 日志辅助类
 参考LogThis类
 </summary>
</member>
<member name="T:Wangk.Tools.Logger.LogLevel">
 <summary>
 日志等级
 </summary>
</member>
<member name="F:Wangk.Tools.Logger.LogLevel.Level_DEBUG">
 <summary>
 在开发过程中有用的信息，不会在生产环境中显示
 </summary>
</member>
<member name="F:Wangk.Tools.Logger.LogLevel.Level_INFO">
 <summary>
 调试生产问题时需要的信息
 </summary>
</member>
<member name="F:Wangk.Tools.Logger.LogLevel.Level_WARN">
 <summary>
 虽然发生错误事件, 但仍然不影响系统的继续运行
 </summary>
</member>
<member name="F:Wangk.Tools.Logger.LogLevel.Level_ERROR">
 <summary>
 严重的错误事件将会导致应用程序的退出
 </summary>
</member>
<member name="F:Wangk.Tools.Logger.path">
 <summary>
 写入文件夹
 </summary>
</member>
<member name="F:Wangk.Tools.Logger.saveDaysMax">
 <summary>
 日志保留天数
 </summary>
</member>
<member name="F:Wangk.Tools.Logger.writeLevel">
 <summary>
 日志的写入级别
 </summary>
</member>
<member name="F:Wangk.Tools.Logger.logsCache">
 <summary>
 写入缓存(线程安全)
 </summary>
</member>
<member name="F:Wangk.Tools.Logger.workThread">
 <summary>
 写日志线程实例
 </summary>
</member>
<member name="F:Wangk.Tools.Logger.DeleteThread">
 <summary>
 删除日志线程实例
 </summary>
</member>
<member name="F:Wangk.Tools.Logger.writeEvent">
 <summary>
 写入日志通知
 </summary>
</member>
<member name="M:Wangk.Tools.Logger.#ctor">
 <summary>
 构造
 </summary>
</member>
<member name="M:Wangk.Tools.Logger.Init">
 <summary>
 初始化
 </summary>
</member>
<member name="M:Wangk.Tools.Logger.WriteThread">
 <summary>
 写入线程
 </summary>
</member>
<member name="M:Wangk.Tools.Logger.LogThis(System.String,System.String,Wangk.Tools.Logger.LogLevel)">
 <summary>
 添加日志
 </summary>
 <param name="Context">标题</param>
 <param name="Message">日志内容</param>
 <param name="level">日志等级</param>
</member>
<member name="M:Wangk.Tools.Logger.LogThis(System.String)">
 <summary>
 添加日志
 </summary>
 <param name="Message">日志内容</param>
</member>
<member name="M:Wangk.Tools.Logger.DeleteOldLogs">
 <summary>
 删除旧log文件
 </summary>
</member>
<member name="M:Wangk.Tools.Logger.Finalize">
 <summary>
 析构
 </summary>
</member>
<member name="T:Wangk.Tools.LoggerHelper">
 <summary>
 全局日志管理器
 </summary>
</member>
<member name="F:Wangk.Tools.LoggerHelper.instance">
 <summary>
 实例
 </summary>
</member>
<member name="P:Wangk.Tools.LoggerHelper.Log">
 <summary>
 参数
 </summary>
</member>
<member name="M:Wangk.Tools.LoggerHelper.Init(System.String,System.Int32,Wangk.Tools.Logger.LogLevel)">
 <summary>
 初始化
 </summary>
 <param name="path">写入文件夹(默认 ./Logs)</param>
 <param name="saveDaysMax">日志保留天数(默认 30)</param>
 <param name="writelevel">日志的写入级别(默认 Level_DEBUG)</param>
</member>
</members>
</doc>
